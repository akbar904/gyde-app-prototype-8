{
  "package_name": "com.com.walturn.aorteq_app",
  "project_description": "A web-based USMLE Step 1 study companion called AorteQ, featuring an authentication system, initial study plan setup, question bank interface, and progress tracking dashboard. The application is built using Flutter with a focus on responsive design and a professional aesthetic.",
  "architecture_overview": "The application follows a modular architecture with separate folders for authentication, study plan setup, question bank, and progress tracking. Each feature has dedicated views and viewmodels, ensuring separation of concerns and scalability. State management is handled using a scalable solution like Provider or Riverpod.",
  "folder_structure": {
    "lib": {
      "app": {
        "app.dart": {},
        "app.locator.dart": {},
        "app.router.dart": {}
      },
      "features": {
        "authentication": {
          "login_view.dart": {},
          "login_viewmodel.dart": {}
        },
        "study_plan": {
          "study_plan_view.dart": {},
          "study_plan_viewmodel.dart": {}
        },
        "question_bank": {
          "question_view.dart": {},
          "question_viewmodel.dart": {}
        },
        "progress_tracking": {
          "progress_view.dart": {},
          "progress_viewmodel.dart": {}
        }
      },
      "ui": {
        "components": {
          "custom_button.dart": {},
          "custom_input_field.dart": {}
        }
      },
      "main.dart": {}
    }
  },
  "files": [
    {
      "name": "lib/app/app.dart",
      "description": "Defines the app structure using StackedApp annotation for routes, dependencies, and services. It includes routes for authentication, study plan setup, question bank, and progress tracking.",
      "class_diagram": "@startuml\nclass App\n@enduml",
      "methods": [],
      "dependencies": [
        "package:stacked/stacked_annotations.dart",
        "package:stacked_services/stacked_services.dart",
        "package:my_app/features/authentication/login_view.dart",
        "package:my_app/features/study_plan/study_plan_view.dart",
        "package:my_app/features/question_bank/question_view.dart",
        "package:my_app/features/progress_tracking/progress_view.dart"
      ]
    },
    {
      "name": "lib/features/authentication/login_view.dart",
      "description": "Defines the login view for user authentication.",
      "class_diagram": "@startuml\nclass LoginView\n@enduml",
      "methods": [],
      "dependencies": [
        "package:stacked/stacked.dart",
        "package:stacked_services/stacked_services.dart"
      ]
    },
    {
      "name": "lib/features/authentication/login_viewmodel.dart",
      "description": "ViewModel for the LoginView, manages authentication logic.",
      "class_diagram": "@startuml\nclass LoginViewModel\n@enduml",
      "methods": [
        {
          "name": "login",
          "description": "Handles user login logic",
          "parameters": [
            "String email",
            "String password"
          ],
          "return_type": "Future<void>"
        }
      ],
      "dependencies": [
        "package:stacked/stacked.dart",
        "package:stacked_services/stacked_services.dart"
      ]
    },
    {
      "name": "lib/features/study_plan/study_plan_view.dart",
      "description": "Defines the study plan setup view with a three-step wizard.",
      "class_diagram": "@startuml\nclass StudyPlanView\n@enduml",
      "methods": [],
      "dependencies": [
        "package:stacked/stacked.dart",
        "package:stacked_services/stacked_services.dart"
      ]
    },
    {
      "name": "lib/features/study_plan/study_plan_viewmodel.dart",
      "description": "ViewModel for the StudyPlanView, manages study plan logic.",
      "class_diagram": "@startuml\nclass StudyPlanViewModel\n@enduml",
      "methods": [
        {
          "name": "setupStudyPlan",
          "description": "Handles the setup of the study plan",
          "parameters": [
            "Map<String, dynamic> planDetails"
          ],
          "return_type": "Future<void>"
        }
      ],
      "dependencies": [
        "package:stacked/stacked.dart",
        "package:stacked_services/stacked_services.dart"
      ]
    },
    {
      "name": "lib/features/question_bank/question_view.dart",
      "description": "Defines the question view for the question bank interface.",
      "class_diagram": "@startuml\nclass QuestionView\n@enduml",
      "methods": [],
      "dependencies": [
        "package:stacked/stacked.dart",
        "package:stacked_services/stacked_services.dart"
      ]
    },
    {
      "name": "lib/features/question_bank/question_viewmodel.dart",
      "description": "ViewModel for the QuestionView, manages question bank logic.",
      "class_diagram": "@startuml\nclass QuestionViewModel\n@enduml",
      "methods": [
        {
          "name": "loadQuestions",
          "description": "Loads questions for the session",
          "parameters": [],
          "return_type": "Future<void>"
        }
      ],
      "dependencies": [
        "package:stacked/stacked.dart",
        "package:stacked_services/stacked_services.dart"
      ]
    },
    {
      "name": "lib/features/progress_tracking/progress_view.dart",
      "description": "Defines the progress tracking dashboard view.",
      "class_diagram": "@startuml\nclass ProgressView\n@enduml",
      "methods": [],
      "dependencies": [
        "package:stacked/stacked.dart",
        "package:stacked_services/stacked_services.dart"
      ]
    },
    {
      "name": "lib/features/progress_tracking/progress_viewmodel.dart",
      "description": "ViewModel for the ProgressView, manages progress tracking logic.",
      "class_diagram": "@startuml\nclass ProgressViewModel\n@enduml",
      "methods": [
        {
          "name": "trackProgress",
          "description": "Tracks user progress and updates metrics",
          "parameters": [],
          "return_type": "Future<void>"
        }
      ],
      "dependencies": [
        "package:stacked/stacked.dart",
        "package:stacked_services/stacked_services.dart"
      ]
    },
    {
      "name": "lib/main.dart",
      "description": "The entry point of the application. Sets up the app and runs it.",
      "class_diagram": "@startuml\nclass main\n@enduml",
      "methods": [
        {
          "name": "main",
          "description": "The main function that runs the app",
          "parameters": [],
          "return_type": "void"
        }
      ],
      "dependencies": [
        "package:flutter/material.dart",
        "package:flutter/services.dart",
        "package:my_app/app/app.dart"
      ]
    }
  ],
  "dependencies": [
    {
      "name": "flutter",
      "version": "sdk: flutter",
      "purpose": "Flutter framework"
    },
    {
      "name": "stacked",
      "version": "^3.4.0",
      "purpose": "Stacked architecture for state management and routing"
    },
    {
      "name": "stacked_services",
      "version": "^1.1.0",
      "purpose": "Services for Stacked architecture"
    },
    {
      "name": "provider",
      "version": "^5.0.0",
      "purpose": "State management solution"
    }
  ],
  "sequence_diagram": "@startuml\nactor User\nparticipant main\nparticipant LoginView\nparticipant StudyPlanView\nparticipant StudyPlanViewModel\nparticipant QuestionView\nparticipant QuestionViewModel\nparticipant ProgressView\nparticipant ProgressViewModel\n\nUser -> main: Launch app\nmain -> LoginView: Show login\nUser -> LoginView: Authenticate\nLoginView -> StudyPlanView: Navigate on success\nStudyPlanView -> StudyPlanViewModel: Setup study plan\nStudyPlanViewModel -> QuestionView: Navigate on completion\nQuestionView -> QuestionViewModel: Load questions\nUser -> QuestionView: Answer questions\nQuestionViewModel -> ProgressView: Navigate on completion\nProgressView -> ProgressViewModel: Track progress\n@enduml",
  "state_management_flow": "State is managed using a scalable solution like Provider or Riverpod. ViewModels handle the business logic and state for their respective views, ensuring separation of concerns and maintainability.",
  "navigation_flow": "The application starts with main.dart, which sets up the app and shows the LoginView. Upon successful authentication, it navigates to the StudyPlanView. After setting up the study plan, it navigates to the QuestionView, and finally to the ProgressView for tracking progress. Navigation is managed by the Stacked Router defined in app.router.dart."
}