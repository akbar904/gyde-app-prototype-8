{
  "package_name": "com.com.walturn.aorteq_app",
  "project_description": "A Flutter project transformed into a medical study companion app called Aorteq, featuring authentication, exam selection, study planning, and personalized study plan generation using the MVVM architecture.",
  "architecture_overview": "The application follows the MVVM architecture with separate folders for app setup, features, UI components, and utilities. It uses ViewModels for state management, routing, and dependency injection. The app includes authentication, exam selection, and study planning flows.",
  "folder_structure": {
    "lib": {
      "app": {
        "app.bottomsheets.dart": {},
        "app.dart": {},
        "app.dialogs.dart": {},
        "app.locator.dart": {},
        "app.router.dart": {}
      },
      "features": {
        "authentication": {
          "welcome_view.dart": {},
          "welcome_viewmodel.dart": {},
          "email_auth_view.dart": {},
          "email_auth_viewmodel.dart": {},
          "user_info_view.dart": {},
          "user_info_viewmodel.dart": {}
        },
        "exam_selection": {
          "exam_selection_view.dart": {},
          "exam_selection_viewmodel.dart": {},
          "topic_selection_view.dart": {},
          "topic_selection_viewmodel.dart": {},
          "study_time_view.dart": {},
          "study_time_viewmodel.dart": {},
          "exam_date_view.dart": {},
          "exam_date_viewmodel.dart": {}
        },
        "study_plan": {
          "study_plan_view.dart": {},
          "study_plan_viewmodel.dart": {}
        }
      },
      "ui": {
        "bottom_sheets": {
          "notice": {
            "notice_sheet.dart": {},
            "notice_sheet_model.dart": {}
          }
        },
        "common": {
          "app_colors.dart": {},
          "ui_helpers.dart": {}
        },
        "dialogs": {
          "info_alert": {
            "info_alert_dialog.dart": {},
            "info_alert_dialog_model.dart": {}
          }
        }
      },
      "main.dart": {}
    }
  },
  "files": [
    {
      "name": "lib/app/app.dart",
      "description": "Defines the app structure using StackedApp annotation for routes, dependencies, bottom sheets, and dialogs. It includes routes for authentication, exam selection, and study planning flows, services, bottom sheets, and dialogs.",
      "class_diagram": "@startuml\nclass App\n@enduml",
      "methods": [],
      "dependencies": [
        "package:stacked/stacked_annotations.dart",
        "package:stacked_services/stacked_services.dart",
        "package:my_app/ui/bottom_sheets/notice/notice_sheet.dart",
        "package:my_app/ui/dialogs/info_alert/info_alert_dialog.dart",
        "package:my_app/features/authentication/welcome_view.dart",
        "package:my_app/features/exam_selection/exam_selection_view.dart",
        "package:my_app/features/study_plan/study_plan_view.dart"
      ]
    },
    {
      "name": "lib/features/authentication/welcome_view.dart",
      "description": "The welcome screen for the authentication flow, displaying the app logo and options for authentication.",
      "class_diagram": "@startuml\nclass WelcomeView\n@enduml",
      "methods": [],
      "dependencies": [
        "package:stacked/stacked.dart",
        "package:stacked_services/stacked_services.dart"
      ]
    },
    {
      "name": "lib/features/authentication/welcome_viewmodel.dart",
      "description": "ViewModel for the WelcomeView, managing state and logic for user authentication options.",
      "class_diagram": "@startuml\nclass WelcomeViewModel\n@enduml",
      "methods": [],
      "dependencies": [
        "package:stacked/stacked.dart",
        "package:stacked_services/stacked_services.dart"
      ]
    },
    {
      "name": "lib/features/exam_selection/exam_selection_view.dart",
      "description": "Screen for selecting the targeted exam, part of the study planning flow.",
      "class_diagram": "@startuml\nclass ExamSelectionView\n@enduml",
      "methods": [],
      "dependencies": [
        "package:stacked/stacked.dart",
        "package:stacked_services/stacked_services.dart"
      ]
    },
    {
      "name": "lib/features/exam_selection/exam_selection_viewmodel.dart",
      "description": "ViewModel for the ExamSelectionView, handling logic for exam selection.",
      "class_diagram": "@startuml\nclass ExamSelectionViewModel\n@enduml",
      "methods": [],
      "dependencies": [
        "package:stacked/stacked.dart",
        "package:stacked_services/stacked_services.dart"
      ]
    },
    {
      "name": "lib/features/study_plan/study_plan_view.dart",
      "description": "Displays the generated personalized study plan.",
      "class_diagram": "@startuml\nclass StudyPlanView\n@enduml",
      "methods": [],
      "dependencies": [
        "package:stacked/stacked.dart",
        "package:stacked_services/stacked_services.dart"
      ]
    },
    {
      "name": "lib/features/study_plan/study_plan_viewmodel.dart",
      "description": "ViewModel for the StudyPlanView, managing the generation and display of the study plan.",
      "class_diagram": "@startuml\nclass StudyPlanViewModel\n@enduml",
      "methods": [],
      "dependencies": [
        "package:stacked/stacked.dart",
        "package:stacked_services/stacked_services.dart"
      ]
    },
    {
      "name": "lib/main.dart",
      "description": "The entry point of the application. Sets up the app and runs it.",
      "class_diagram": "@startuml\nclass main\n@enduml",
      "methods": [
        {
          "name": "main",
          "description": "The main function that runs the app",
          "parameters": [],
          "return_type": "void"
        }
      ],
      "dependencies": [
        "package:flutter/material.dart",
        "package:flutter/services.dart",
        "package:my_app/app/app.bottomsheets.dart",
        "package:my_app/app/app.dialogs.dart",
        "package:my_app/app/app.locator.dart",
        "package:my_app/features/authentication/welcome_view.dart"
      ]
    }
  ],
  "dependencies": [
    {
      "name": "flutter",
      "version": "sdk: flutter",
      "purpose": "Flutter framework"
    },
    {
      "name": "stacked",
      "version": "^3.4.0",
      "purpose": "Stacked architecture for state management and routing"
    },
    {
      "name": "stacked_services",
      "version": "^1.1.0",
      "purpose": "Services for Stacked architecture"
    },
    {
      "name": "gap",
      "version": "^2.0.0",
      "purpose": "Creating gaps in layouts"
    }
  ],
  "sequence_diagram": "@startuml\nactor User\nparticipant main\nparticipant WelcomeView\nparticipant WelcomeViewModel\nparticipant ExamSelectionView\nparticipant ExamSelectionViewModel\nparticipant StudyPlanView\nparticipant StudyPlanViewModel\n\nUser -> main: Launch app\nmain -> WelcomeView: Create and run\nWelcomeView -> WelcomeViewModel: Initialize\nUser -> WelcomeView: Authenticate\nWelcomeViewModel -> ExamSelectionView: Navigate on success\nExamSelectionView -> ExamSelectionViewModel: Initialize\nUser -> ExamSelectionView: Select exam\nExamSelectionViewModel -> StudyPlanView: Generate plan\nStudyPlanView -> StudyPlanViewModel: Display plan\n@enduml",
  "state_management_flow": "State is managed using the MVVM architecture. ViewModels handle the business logic and state for their respective views. The app.locator.dart file sets up dependency injection, while app.router.dart manages navigation between views.",
  "navigation_flow": "The application starts with main.dart, which sets up the app and runs WelcomeView. WelcomeView initializes the MVVM architecture and handles user authentication. Upon successful authentication, it navigates to the ExamSelectionView, followed by the StudyPlanView. Navigation between views is handled by the Stacked Router defined in app.router.dart."
}