{
  "package_name": "com.com.walturn.gyde_app",
  "project_description": "A Flutter project transformed into a luxury chauffeur service app named Gyde, featuring comprehensive authentication, profile management, booking system, and ride management features using the Stacked architecture.",
  "architecture_overview": "The application follows the Stacked architecture with separate folders for app setup, features, UI components, and utilities. It uses Stacked for state management, routing, and dependency injection. The architecture supports complex user flows, state management, and UI components following a dark theme.",
  "folder_structure": {
    "lib": {
      "app": {
        "app.bottomsheets.dart": {},
        "app.dart": {},
        "app.dialogs.dart": {},
        "app.locator.dart": {},
        "app.router.dart": {}
      },
      "features": {
        "authentication": {
          "splash_view.dart": {},
          "splash_viewmodel.dart": {},
          "welcome_view.dart": {},
          "welcome_viewmodel.dart": {},
          "phone_verification_view.dart": {},
          "phone_verification_viewmodel.dart": {},
          "email_collection_view.dart": {},
          "email_collection_viewmodel.dart": {},
          "terms_view.dart": {},
          "terms_viewmodel.dart": {}
        },
        "profile_setup": {
          "mode_selection_view.dart": {},
          "mode_selection_viewmodel.dart": {},
          "profile_information_view.dart": {},
          "profile_information_viewmodel.dart": {},
          "package_selection_view.dart": {},
          "package_selection_viewmodel.dart": {},
          "payment_method_view.dart": {},
          "payment_method_viewmodel.dart": {},
          "notification_permission_view.dart": {},
          "notification_permission_viewmodel.dart": {}
        },
        "home": {
          "home_view.dart": {},
          "home_viewmodel.dart": {}
        },
        "booking": {
          "one_way_booking_view.dart": {},
          "one_way_booking_viewmodel.dart": {},
          "multi_stop_booking_view.dart": {},
          "multi_stop_booking_viewmodel.dart": {},
          "hourly_booking_view.dart": {},
          "hourly_booking_viewmodel.dart": {}
        }
      },
      "ui": {
        "bottom_sheets": {
          "notice": {
            "notice_sheet.dart": {},
            "notice_sheet_model.dart": {}
          }
        },
        "common": {
          "app_colors.dart": {},
          "ui_helpers.dart": {}
        },
        "dialogs": {
          "info_alert": {
            "info_alert_dialog.dart": {},
            "info_alert_dialog_model.dart": {}
          }
        }
      },
      "main.dart": {}
    }
  },
  "files": [
    {
      "name": "lib/app/app.dart",
      "description": "Defines the app structure using StackedApp annotation for routes, dependencies, bottom sheets, and dialogs. It includes routes for authentication, profile setup, home, and booking views, services for authentication, navigation, and payment processing.",
      "class_diagram": "@startuml\nclass App\n@enduml",
      "methods": [],
      "dependencies": [
        "package:stacked/stacked_annotations.dart",
        "package:stacked_services/stacked_services.dart",
        "package:my_app/ui/bottom_sheets/notice/notice_sheet.dart",
        "package:my_app/ui/dialogs/info_alert/info_alert_dialog.dart",
        "package:my_app/features/authentication/splash_view.dart",
        "package:my_app/features/home/home_view.dart"
      ]
    },
    {
      "name": "lib/features/authentication/splash_view.dart",
      "description": "Splash screen showing luxury car interior and chauffeur.",
      "class_diagram": "@startuml\nclass SplashView\n@enduml",
      "methods": [],
      "dependencies": [
        "package:stacked/stacked.dart",
        "package:stacked_services/stacked_services.dart"
      ]
    },
    {
      "name": "lib/features/authentication/splash_viewmodel.dart",
      "description": "ViewModel for the SplashView, handles initialization logic.",
      "class_diagram": "@startuml\nclass SplashViewModel\n@enduml",
      "methods": [
        {
          "name": "initialize",
          "description": "Initializes the splash screen and navigates to the welcome view.",
          "parameters": [],
          "return_type": "Future"
        }
      ],
      "dependencies": [
        "package:stacked/stacked.dart",
        "package:stacked_services/stacked_services.dart"
      ]
    },
    {
      "name": "lib/features/home/home_view.dart",
      "description": "The main home view of the application, displaying service categories and featured chauffeur.",
      "class_diagram": "@startuml\nclass HomeView\n@enduml",
      "methods": [],
      "dependencies": [
        "package:stacked/stacked.dart",
        "package:gap/gap.dart"
      ]
    },
    {
      "name": "lib/features/home/home_viewmodel.dart",
      "description": "ViewModel for the HomeView, manages the state and business logic for displaying services and chauffeur details.",
      "class_diagram": "@startuml\nclass HomeViewModel\n@enduml",
      "methods": [
        {
          "name": "loadChauffeurDetails",
          "description": "Loads the details of the featured chauffeur.",
          "parameters": [],
          "return_type": "void"
        }
      ],
      "dependencies": [
        "package:stacked/stacked.dart",
        "package:stacked_services/stacked_services.dart"
      ]
    },
    {
      "name": "lib/main.dart",
      "description": "The entry point of the application. Sets up the app and runs it.",
      "class_diagram": "@startuml\nclass main\n@enduml",
      "methods": [
        {
          "name": "main",
          "description": "The main function that runs the app",
          "parameters": [],
          "return_type": "void"
        }
      ],
      "dependencies": [
        "package:flutter/material.dart",
        "package:flutter/services.dart",
        "package:my_app/app/app.bottomsheets.dart",
        "package:my_app/app/app.dialogs.dart",
        "package:my_app/app/app.locator.dart",
        "package:my_app/features/authentication/splash_view.dart"
      ]
    }
  ],
  "dependencies": [
    {
      "name": "flutter",
      "version": "sdk: flutter",
      "purpose": "Flutter framework"
    },
    {
      "name": "stacked",
      "version": "^3.4.0",
      "purpose": "Stacked architecture for state management and routing"
    },
    {
      "name": "stacked_services",
      "version": "^1.1.0",
      "purpose": "Services for Stacked architecture"
    },
    {
      "name": "gap",
      "version": "^2.0.0",
      "purpose": "Creating gaps in layouts"
    }
  ],
  "sequence_diagram": "@startuml\nactor User\nparticipant main\nparticipant SplashView\nparticipant WelcomeView\nparticipant AuthenticationViewModel\nparticipant HomeView\nparticipant HomeViewModel\n\nUser -> main: Launch app\nmain -> SplashView: Create and run\nSplashView -> WelcomeView: Navigate after splash\nWelcomeView -> AuthenticationViewModel: Handle authentication\nAuthenticationViewModel -> HomeView: Navigate on success\nHomeView -> HomeViewModel: Initialize\nUser -> HomeView: Interact\nHomeView -> HomeViewModel: Handle user actions\nHomeViewModel -> HomeView: Update UI\n@enduml",
  "state_management_flow": "State is managed using the Stacked architecture. ViewModels handle the business logic and state for their respective views. The app.locator.dart file sets up dependency injection, while app.router.dart manages navigation between views. Each feature has dedicated ViewModels to handle complex user flows and state management.",
  "navigation_flow": "The application starts with main.dart, which sets up the app and runs SplashView. SplashView transitions to WelcomeView, which handles authentication. Upon successful authentication, the app navigates to HomeView. Navigation between views is handled by the Stacked Router defined in app.router.dart."
}