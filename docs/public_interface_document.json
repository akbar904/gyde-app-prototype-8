{
  "package_name": "com.com.walturn.gyde_app",
  "project_description": "A Flutter project for a luxury chauffeur service app called Gyde, featuring an onboarding flow with sliding transitions, authentication options, user verification, and a comprehensive home page experience with ride management, chauffeur profiles, and user dashboard functionality. The app now includes a profile setup flow with Business and Personal modes, guiding users through mode selection, personal/company information collection, package selection, payment integration, and notification permissions.",
  "architecture_overview": "The application follows the Stacked architecture with separate folders for app setup, onboarding features, profile setup features, UI components, and utilities. It uses Stacked for state management, routing, and dependency injection. New feature modules for rides, chauffeurs, profile management, and profile setup have been added, along with a theme service for dark mode support.",
  "folder_structure": {
    "lib": {
      "app": {
        "app.bottomsheets.dart": {},
        "app.dart": {},
        "app.dialogs.dart": {},
        "app.locator.dart": {},
        "app.router.dart": {}
      },
      "features": {
        "onboarding": {
          "welcome_view.dart": {},
          "auth_options_view.dart": {},
          "phone_input_view.dart": {},
          "verification_code_view.dart": {},
          "email_collection_view.dart": {},
          "welcome_confirmation_view.dart": {},
          "terms_conditions_view.dart": {},
          "onboarding_viewmodel.dart": {}
        },
        "home": {
          "main_rides_view.dart": {},
          "chauffeur_details_view.dart": {},
          "profile_view.dart": {},
          "home_viewmodel.dart": {}
        },
        "profile_setup": {
          "mode_selection_view.dart": {},
          "personal_info_view.dart": {},
          "company_info_view.dart": {},
          "package_selection_view.dart": {},
          "payment_method_view.dart": {},
          "card_details_view.dart": {},
          "notification_permission_view.dart": {},
          "profile_completion_view.dart": {},
          "profile_setup_viewmodel.dart": {}
        }
      },
      "ui": {
        "common": {
          "app_colors.dart": {},
          "ui_helpers.dart": {}
        }
      },
      "main.dart": {}
    }
  },
  "files": [
    {
      "name": "lib/app/app.dart",
      "description": "Defines the app structure using StackedApp annotation for routes, dependencies, bottom sheets, and dialogs. It includes routes for the onboarding and profile setup flows, and services for navigation and authentication.",
      "class_diagram": "@startuml\nclass App\n@enduml",
      "methods": [],
      "dependencies": [
        "package:stacked/stacked_annotations.dart",
        "package:stacked_services/stacked_services.dart",
        "package:my_app/features/onboarding/welcome_view.dart",
        "package:my_app/features/onboarding/auth_options_view.dart",
        "package:my_app/features/onboarding/phone_input_view.dart",
        "package:my_app/features/onboarding/verification_code_view.dart",
        "package:my_app/features/onboarding/email_collection_view.dart",
        "package:my_app/features/onboarding/welcome_confirmation_view.dart",
        "package:my_app/features/onboarding/terms_conditions_view.dart",
        "package:my_app/features/home/main_rides_view.dart",
        "package:my_app/features/home/chauffeur_details_view.dart",
        "package:my_app/features/home/profile_view.dart",
        "package:my_app/features/profile_setup/mode_selection_view.dart",
        "package:my_app/features/profile_setup/personal_info_view.dart",
        "package:my_app/features/profile_setup/company_info_view.dart",
        "package:my_app/features/profile_setup/package_selection_view.dart",
        "package:my_app/features/profile_setup/payment_method_view.dart",
        "package:my_app/features/profile_setup/card_details_view.dart",
        "package:my_app/features/profile_setup/notification_permission_view.dart",
        "package:my_app/features/profile_setup/profile_completion_view.dart"
      ]
    },
    {
      "name": "lib/features/onboarding/welcome_view.dart",
      "description": "The welcome page of the onboarding flow, introducing the Gyde service.",
      "class_diagram": "@startuml\nclass WelcomeView\n@enduml",
      "methods": [],
      "dependencies": [
        "package:stacked/stacked.dart"
      ]
    },
    {
      "name": "lib/features/onboarding/auth_options_view.dart",
      "description": "Page for selecting authentication options: phone or email.",
      "class_diagram": "@startuml\nclass AuthOptionsView\n@enduml",
      "methods": [],
      "dependencies": [
        "package:stacked/stacked.dart"
      ]
    },
    {
      "name": "lib/features/onboarding/phone_input_view.dart",
      "description": "Page for entering and validating the user's phone number.",
      "class_diagram": "@startuml\nclass PhoneInputView\n@enduml",
      "methods": [],
      "dependencies": [
        "package:stacked/stacked.dart"
      ]
    },
    {
      "name": "lib/features/onboarding/verification_code_view.dart",
      "description": "Page for entering the verification code sent to the user's phone.",
      "class_diagram": "@startuml\nclass VerificationCodeView\n@enduml",
      "methods": [],
      "dependencies": [
        "package:stacked/stacked.dart"
      ]
    },
    {
      "name": "lib/features/onboarding/email_collection_view.dart",
      "description": "Page for collecting the user's email address.",
      "class_diagram": "@startuml\nclass EmailCollectionView\n@enduml",
      "methods": [],
      "dependencies": [
        "package:stacked/stacked.dart"
      ]
    },
    {
      "name": "lib/features/onboarding/welcome_confirmation_view.dart",
      "description": "Confirmation page welcoming the user to Gyde.",
      "class_diagram": "@startuml\nclass WelcomeConfirmationView\n@enduml",
      "methods": [],
      "dependencies": [
        "package:stacked/stacked.dart"
      ]
    },
    {
      "name": "lib/features/onboarding/terms_conditions_view.dart",
      "description": "Page displaying the terms and conditions of the Gyde service.",
      "class_diagram": "@startuml\nclass TermsConditionsView\n@enduml",
      "methods": [],
      "dependencies": [
        "package:stacked/stacked.dart"
      ]
    },
    {
      "name": "lib/features/onboarding/onboarding_viewmodel.dart",
      "description": "ViewModel managing the state and logic for the onboarding flow.",
      "class_diagram": "@startuml\nclass OnboardingViewModel\n@enduml",
      "methods": [],
      "dependencies": [
        "package:stacked/stacked.dart",
        "package:stacked_services/stacked_services.dart"
      ]
    },
    {
      "name": "lib/features/home/main_rides_view.dart",
      "description": "Main rides page with segmented navigation for 'Upcoming', 'Past', and 'Canceled' rides.",
      "class_diagram": "@startuml\nclass MainRidesView\n@enduml",
      "methods": [],
      "dependencies": [
        "package:stacked/stacked.dart"
      ]
    },
    {
      "name": "lib/features/home/chauffeur_details_view.dart",
      "description": "Chauffeur details page showing the profile with car information, availability, and a 'Send Message' button.",
      "class_diagram": "@startuml\nclass ChauffeurDetailsView\n@enduml",
      "methods": [],
      "dependencies": [
        "package:stacked/stacked.dart"
      ]
    },
    {
      "name": "lib/features/home/profile_view.dart",
      "description": "Profile page displaying user information with sections for subscriptions, promos, payment methods, and analytics.",
      "class_diagram": "@startuml\nclass ProfileView\n@enduml",
      "methods": [],
      "dependencies": [
        "package:stacked/stacked.dart"
      ]
    },
    {
      "name": "lib/features/home/home_viewmodel.dart",
      "description": "ViewModel managing the state and logic for the home page features.",
      "class_diagram": "@startuml\nclass HomeViewModel\n@enduml",
      "methods": [],
      "dependencies": [
        "package:stacked/stacked.dart",
        "package:stacked_services/stacked_services.dart"
      ]
    },
    {
      "name": "lib/features/profile_setup/mode_selection_view.dart",
      "description": "Page for selecting between Business and Personal modes.",
      "class_diagram": "@startuml\nclass ModeSelectionView\n@enduml",
      "methods": [],
      "dependencies": [
        "package:stacked/stacked.dart"
      ]
    },
    {
      "name": "lib/features/profile_setup/personal_info_view.dart",
      "description": "Page for entering personal information such as first and last name.",
      "class_diagram": "@startuml\nclass PersonalInfoView\n@enduml",
      "methods": [],
      "dependencies": [
        "package:stacked/stacked.dart"
      ]
    },
    {
      "name": "lib/features/profile_setup/company_info_view.dart",
      "description": "Page for entering company information for Business mode users.",
      "class_diagram": "@startuml\nclass CompanyInfoView\n@enduml",
      "methods": [],
      "dependencies": [
        "package:stacked/stacked.dart"
      ]
    },
    {
      "name": "lib/features/profile_setup/package_selection_view.dart",
      "description": "Page for selecting a package based on the chosen mode.",
      "class_diagram": "@startuml\nclass PackageSelectionView\n@enduml",
      "methods": [],
      "dependencies": [
        "package:stacked/stacked.dart"
      ]
    },
    {
      "name": "lib/features/profile_setup/payment_method_view.dart",
      "description": "Page for selecting a payment method.",
      "class_diagram": "@startuml\nclass PaymentMethodView\n@enduml",
      "methods": [],
      "dependencies": [
        "package:stacked/stacked.dart"
      ]
    },
    {
      "name": "lib/features/profile_setup/card_details_view.dart",
      "description": "Page for entering credit or debit card details.",
      "class_diagram": "@startuml\nclass CardDetailsView\n@enduml",
      "methods": [],
      "dependencies": [
        "package:stacked/stacked.dart"
      ]
    },
    {
      "name": "lib/features/profile_setup/notification_permission_view.dart",
      "description": "Page for requesting notification permissions.",
      "class_diagram": "@startuml\nclass NotificationPermissionView\n@enduml",
      "methods": [],
      "dependencies": [
        "package:stacked/stacked.dart"
      ]
    },
    {
      "name": "lib/features/profile_setup/profile_completion_view.dart",
      "description": "Page confirming profile setup completion with a personalized greeting.",
      "class_diagram": "@startuml\nclass ProfileCompletionView\n@enduml",
      "methods": [],
      "dependencies": [
        "package:stacked/stacked.dart"
      ]
    },
    {
      "name": "lib/features/profile_setup/profile_setup_viewmodel.dart",
      "description": "ViewModel managing the state and logic for the profile setup flow.",
      "class_diagram": "@startuml\nclass ProfileSetupViewModel\n@enduml",
      "methods": [],
      "dependencies": [
        "package:stacked/stacked.dart",
        "package:stacked_services/stacked_services.dart"
      ]
    },
    {
      "name": "lib/main.dart",
      "description": "The entry point of the application. Sets up the app and runs it.",
      "class_diagram": "@startuml\nclass main\n@enduml",
      "methods": [
        {
          "name": "main",
          "description": "The main function that runs the app",
          "parameters": [],
          "return_type": "void"
        }
      ],
      "dependencies": [
        "package:flutter/material.dart",
        "package:flutter/services.dart",
        "package:my_app/app/app.bottomsheets.dart",
        "package:my_app/app/app.dialogs.dart",
        "package:my_app/app/app.locator.dart",
        "package:my_app/features/onboarding/welcome_view.dart"
      ]
    }
  ],
  "dependencies": [
    {
      "name": "flutter",
      "version": "sdk: flutter",
      "purpose": "Flutter framework"
    },
    {
      "name": "stacked",
      "version": "^3.4.0",
      "purpose": "Stacked architecture for state management and routing"
    },
    {
      "name": "stacked_services",
      "version": "^1.1.0",
      "purpose": "Services for Stacked architecture"
    },
    {
      "name": "gap",
      "version": "^2.0.0",
      "purpose": "Creating gaps in layouts"
    }
  ],
  "sequence_diagram": "@startuml\nactor User\nparticipant main\nparticipant WelcomeView\nparticipant AuthOptionsView\nparticipant PhoneInputView\nparticipant VerificationCodeView\nparticipant EmailCollectionView\nparticipant WelcomeConfirmationView\nparticipant TermsConditionsView\nparticipant MainRidesView\nparticipant ChauffeurDetailsView\nparticipant ProfileView\nparticipant ModeSelectionView\nparticipant PersonalInfoView\nparticipant CompanyInfoView\nparticipant PackageSelectionView\nparticipant PaymentMethodView\nparticipant CardDetailsView\nparticipant NotificationPermissionView\nparticipant ProfileCompletionView\n\nUser -> main: Launch app\nmain -> WelcomeView: Show welcome page\nUser -> WelcomeView: Click 'Get Started'\nWelcomeView -> AuthOptionsView: Navigate to auth options\nUser -> AuthOptionsView: Select auth method\nAuthOptionsView -> PhoneInputView: Navigate to phone input\nUser -> PhoneInputView: Enter phone number\nPhoneInputView -> VerificationCodeView: Navigate to verification code\nUser -> VerificationCodeView: Enter code\nVerificationCodeView -> EmailCollectionView: Navigate to email collection\nUser -> EmailCollectionView: Enter email\nEmailCollectionView -> WelcomeConfirmationView: Navigate to welcome confirmation\nUser -> WelcomeConfirmationView: Click 'Continue'\nWelcomeConfirmationView -> TermsConditionsView: Navigate to terms and conditions\nTermsConditionsView -> ModeSelectionView: Navigate to mode selection\nUser -> ModeSelectionView: Select mode\nModeSelectionView -> PersonalInfoView: Navigate to personal info\nUser -> PersonalInfoView: Enter personal info\nPersonalInfoView -> CompanyInfoView: Navigate to company info (if Business Mode)\nUser -> CompanyInfoView: Enter company info\nCompanyInfoView -> PackageSelectionView: Navigate to package selection\nUser -> PackageSelectionView: Select package\nPackageSelectionView -> PaymentMethodView: Navigate to payment method\nUser -> PaymentMethodView: Select payment method\nPaymentMethodView -> CardDetailsView: Navigate to card details (if card selected)\nUser -> CardDetailsView: Enter card details\nCardDetailsView -> NotificationPermissionView: Navigate to notification permission\nUser -> NotificationPermissionView: Allow notifications\nNotificationPermissionView -> ProfileCompletionView: Navigate to profile completion\nUser -> ProfileCompletionView: Complete setup\nProfileCompletionView -> MainRidesView: Navigate to main rides page\nUser -> MainRidesView: View rides\nMainRidesView -> ChauffeurDetailsView: View chauffeur details\nUser -> ChauffeurDetailsView: Send message\nChauffeurDetailsView -> ProfileView: Navigate to profile\n@enduml",
  "state_management_flow": "State is managed using the Stacked architecture. ViewModels (e.g., OnboardingViewModel, HomeViewModel, ProfileSetupViewModel) handle the business logic and state for their respective views. The app.locator.dart file sets up dependency injection, while app.router.dart manages navigation between views.",
  "navigation_flow": "The application starts with main.dart, which sets up the app and runs the WelcomeView. The onboarding flow progresses through a series of views with sliding transitions, managed by the Stacked Router defined in app.router.dart. The profile setup flow guides users through mode selection, personal/company information collection, package selection, payment integration, and notification permissions. The home page experience includes segmented navigation for rides, chauffeur details, and profile management, with a bottom navigation bar for easy access to main sections."
}