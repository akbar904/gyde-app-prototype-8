{
  "package_name": "com.com.walturn.aorteq_app",
  "project_description": "A web-based USMLE Step 1 study companion called AorteQ, featuring an authentication system, initial study plan setup wizard, question bank interface, and progress tracking dashboard, all designed with a clean, professional aesthetic.",
  "architecture_overview": "The application follows a modular architecture, separating features into distinct modules for authentication, study planning, question bank, and progress tracking. It utilizes Stacked for state management, routing, and dependency injection.",
  "folder_structure": {
    "lib": {
      "app": {
        "app.bottomsheets.dart": {},
        "app.dart": {},
        "app.dialogs.dart": {},
        "app.locator.dart": {},
        "app.router.dart": {}
      },
      "features": {
        "authentication": {
          "login_view.dart": {},
          "login_viewmodel.dart": {}
        },
        "study_plan": {
          "study_plan_view.dart": {},
          "study_plan_viewmodel.dart": {}
        },
        "question_bank": {
          "question_view.dart": {},
          "question_viewmodel.dart": {}
        },
        "progress_tracking": {
          "progress_dashboard_view.dart": {},
          "progress_dashboard_viewmodel.dart": {}
        }
      },
      "ui": {
        "bottom_sheets": {
          "notice": {
            "notice_sheet.dart": {},
            "notice_sheet_model.dart": {}
          }
        },
        "dialogs": {
          "info_alert": {
            "info_alert_dialog.dart": {},
            "info_alert_dialog_model.dart": {}
          }
        }
      },
      "main.dart": {}
    }
  },
  "files": [
    {
      "name": "lib/app/app.dart",
      "description": "Defines the app structure using StackedApp annotation for routes, dependencies, bottom sheets, and dialogs. It includes routes for LoginView, StudyPlanView, QuestionView, and ProgressDashboardView.",
      "class_diagram": "@startuml\nclass App\n@enduml",
      "methods": [],
      "dependencies": [
        "package:stacked/stacked_annotations.dart",
        "package:stacked_services/stacked_services.dart",
        "package:my_app/ui/bottom_sheets/notice/notice_sheet.dart",
        "package:my_app/ui/dialogs/info_alert/info_alert_dialog.dart",
        "package:my_app/features/authentication/login_view.dart",
        "package:my_app/features/study_plan/study_plan_view.dart",
        "package:my_app/features/question_bank/question_view.dart",
        "package:my_app/features/progress_tracking/progress_dashboard_view.dart"
      ]
    },
    {
      "name": "lib/features/authentication/login_view.dart",
      "description": "Defines the login view for user authentication.",
      "class_diagram": "@startuml\nclass LoginView\n@enduml",
      "methods": [],
      "dependencies": [
        "package:stacked/stacked.dart",
        "package:stacked_services/stacked_services.dart"
      ]
    },
    {
      "name": "lib/features/authentication/login_viewmodel.dart",
      "description": "ViewModel for the LoginView, manages authentication logic.",
      "class_diagram": "@startuml\nclass LoginViewModel\n@enduml",
      "methods": [
        {
          "name": "login",
          "description": "Handles user login logic",
          "parameters": [],
          "return_type": "Future"
        },
        {
          "name": "forgotPassword",
          "description": "Handles forgot password logic",
          "parameters": [],
          "return_type": "Future"
        }
      ],
      "dependencies": [
        "package:stacked/stacked.dart",
        "package:stacked_services/stacked_services.dart"
      ]
    },
    {
      "name": "lib/features/study_plan/study_plan_view.dart",
      "description": "Defines the study plan setup wizard view.",
      "class_diagram": "@startuml\nclass StudyPlanView\n@enduml",
      "methods": [],
      "dependencies": [
        "package:stacked/stacked.dart",
        "package:gap/gap.dart"
      ]
    },
    {
      "name": "lib/features/study_plan/study_plan_viewmodel.dart",
      "description": "ViewModel for the StudyPlanView, manages study plan setup logic.",
      "class_diagram": "@startuml\nclass StudyPlanViewModel\n@enduml",
      "methods": [
        {
          "name": "selectExam",
          "description": "Selects the exam and date for the study plan",
          "parameters": [],
          "return_type": "void"
        },
        {
          "name": "selectTopics",
          "description": "Selects topics for the study plan",
          "parameters": [],
          "return_type": "void"
        },
        {
          "name": "generateSchedule",
          "description": "Generates a study schedule based on user input",
          "parameters": [],
          "return_type": "void"
        }
      ],
      "dependencies": [
        "package:stacked/stacked.dart",
        "package:stacked_services/stacked_services.dart"
      ]
    },
    {
      "name": "lib/features/question_bank/question_view.dart",
      "description": "Defines the question view for the question bank.",
      "class_diagram": "@startuml\nclass QuestionView\n@enduml",
      "methods": [],
      "dependencies": [
        "package:stacked/stacked.dart",
        "package:gap/gap.dart"
      ]
    },
    {
      "name": "lib/features/question_bank/question_viewmodel.dart",
      "description": "ViewModel for the QuestionView, manages question logic.",
      "class_diagram": "@startuml\nclass QuestionViewModel\n@enduml",
      "methods": [
        {
          "name": "loadQuestions",
          "description": "Loads questions for the current session",
          "parameters": [],
          "return_type": "Future"
        },
        {
          "name": "submitAnswer",
          "description": "Submits the selected answer",
          "parameters": [],
          "return_type": "void"
        }
      ],
      "dependencies": [
        "package:stacked/stacked.dart",
        "package:stacked_services/stacked_services.dart"
      ]
    },
    {
      "name": "lib/features/progress_tracking/progress_dashboard_view.dart",
      "description": "Defines the progress tracking dashboard view.",
      "class_diagram": "@startuml\nclass ProgressDashboardView\n@enduml",
      "methods": [],
      "dependencies": [
        "package:stacked/stacked.dart",
        "package:gap/gap.dart"
      ]
    },
    {
      "name": "lib/features/progress_tracking/progress_dashboard_viewmodel.dart",
      "description": "ViewModel for the ProgressDashboardView, manages progress tracking logic.",
      "class_diagram": "@startuml\nclass ProgressDashboardViewModel\n@enduml",
      "methods": [
        {
          "name": "fetchProgress",
          "description": "Fetches the user's progress data",
          "parameters": [],
          "return_type": "Future"
        }
      ],
      "dependencies": [
        "package:stacked/stacked.dart",
        "package:stacked_services/stacked_services.dart"
      ]
    },
    {
      "name": "lib/main.dart",
      "description": "The entry point of the application. Sets up the app and runs it.",
      "class_diagram": "@startuml\nclass main\n@enduml",
      "methods": [
        {
          "name": "main",
          "description": "The main function that runs the app",
          "parameters": [],
          "return_type": "void"
        }
      ],
      "dependencies": [
        "package:flutter/material.dart",
        "package:flutter/services.dart",
        "package:my_app/app/app.bottomsheets.dart",
        "package:my_app/app/app.dialogs.dart",
        "package:my_app/app/app.locator.dart",
        "package:my_app/features/authentication/login_view.dart"
      ]
    }
  ],
  "dependencies": [
    {
      "name": "flutter",
      "version": "sdk: flutter",
      "purpose": "Flutter framework"
    },
    {
      "name": "stacked",
      "version": "^3.4.0",
      "purpose": "Stacked architecture for state management and routing"
    },
    {
      "name": "stacked_services",
      "version": "^1.1.0",
      "purpose": "Services for Stacked architecture"
    },
    {
      "name": "gap",
      "version": "^2.0.0",
      "purpose": "Creating gaps in layouts"
    }
  ],
  "sequence_diagram": "@startuml\nactor User\nparticipant main\nparticipant App\nparticipant LoginView\nparticipant StudyPlanView\nparticipant QuestionView\nparticipant ProgressDashboardView\n\nUser -> main: Launch app\nmain -> App: Create and run\nApp -> LoginView: Show login\nUser -> LoginView: Enter credentials\nLoginView -> App: Authenticate user\nApp -> StudyPlanView: Navigate to study plan setup\nStudyPlanView -> User: Display wizard\nUser -> StudyPlanView: Complete setup\nStudyPlanView -> QuestionView: Navigate to question bank\nUser -> QuestionView: Answer questions\nQuestionView -> ProgressDashboardView: Navigate to progress\nProgressDashboardView -> User: Show progress\n@enduml",
  "state_management_flow": "State is managed using the Stacked architecture. ViewModels (e.g., LoginViewModel, StudyPlanViewModel, QuestionViewModel, ProgressDashboardViewModel) handle the business logic and state for their respective views. The app.locator.dart file sets up dependency injection, while app.router.dart manages navigation between views.",
  "navigation_flow": "The application starts with main.dart, which sets up the app and runs App. App initializes the Stacked architecture and shows LoginView. After successful authentication, it navigates to StudyPlanView. Once the study plan is set up, it navigates to QuestionView, and finally to ProgressDashboardView."
}